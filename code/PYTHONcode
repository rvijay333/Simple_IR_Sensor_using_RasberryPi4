# Principle

The system uses a Raspberry Pi to continuously monitor an infrared (IR) sensor for obstacles. When the sensor detects an obstacle (i.e., when the sensor's input reads `0`), the program activates an LED and a buzzer to provide visual and audible alerts. If no obstacle is detected, both the LED and buzzer remain off. This simple setup is ideal for robotics, security systems, or any project requiring basic obstacle detection.

<hr>

### Program

```python
import RPi.GPIO as GPIO
import time

# Pin definitions (using BCM numbering)
irs_pin = 26   # IR sensor pin
led_pin = 17   # LED pin
buzz_pin = 24  # Buzzer pin

# Set up GPIO mode
GPIO.setmode(GPIO.BCM)

# Configure GPIO pins
GPIO.setup(irs_pin, GPIO.IN)
GPIO.setup(led_pin, GPIO.OUT)
GPIO.setup(buzz_pin, GPIO.OUT)

try:
    while True:
        # Check the state of the IR sensor
        if GPIO.input(irs_pin) == 0:
            # Obstacle detected: Activate LED and buzzer
            GPIO.output(led_pin, True)
            GPIO.output(buzz_pin, True)
            print("OBSTACLE DETECTED :) !!!")
        else:
            # No obstacle detected: Deactivate LED and buzzer
            GPIO.output(led_pin, False)
            GPIO.output(buzz_pin, False)
            print("NO OBSTACLE DETECTED!! :(")
        
        # Short delay to stabilize sensor reading
        time.sleep(0.1)

except KeyboardInterrupt:
    # Gracefully handle exit on Ctrl+C
    pass

finally:
    # Clean up the GPIO settings before exiting
    GPIO.cleanup()
